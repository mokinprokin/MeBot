from aiogram.types import (
    InlineKeyboardMarkup,
)
from aiogram.utils.keyboard import InlineKeyboardBuilder


def create_inline_keyboard(
    buttons: list[dict[str, str]], row_width: int = 1
) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    for button in buttons:
        if "url" in button:
            builder.button(text=button["text"], url=button["url"])
        else:
            builder.button(text=button["text"], callback_data=button["callback_data"])

    builder.adjust(row_width)
    return builder.as_markup()

def create_edit_keyboard() -> InlineKeyboardMarkup:
    buttons = [
        {"text": "‚úèÔ∏è –ò–º—è", "callback_data": "edit_name"},
        {"text": "‚úèÔ∏è –î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "callback_data": "edit_about"},
        {"text": "‚úèÔ∏è –¶–µ–ª—å", "callback_data": "edit_target"},
        {"text": "‚úèÔ∏è –•–æ–±–±–∏", "callback_data": "edit_hobby"},
        {"text": "üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", "callback_data": "regenerate"},
        {"text": "üîÑ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ", "callback_data": "restart_full"},
        {"text": "‚úÖ –ì–æ—Ç–æ–≤–æ", "callback_data": "finish_editing"},
    ]
    return create_inline_keyboard(buttons, row_width=2)

def create_skip_button() -> InlineKeyboardMarkup:
    buttons = [{"text": "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "callback_data": "skip_hobby"}]
    return create_inline_keyboard(buttons, row_width=1)